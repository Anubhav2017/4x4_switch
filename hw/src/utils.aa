$volatile $module [prioritySelect]
	$in (down_counter: $uint<8> active_packet: $uint<3>
			 p1_valid p2_valid p3_valid p4_valid: $uint<1>) 
	$out (next_active_packet: $uint<3>)
$is

{
	d0 := (down_counter == 0)
	select_1 := ($reduce & 
			d0
			p1_valid
			($reduce | (active_packet == 0) 
								  (active_packet == 4)
                                  ($reduce & (~p4_valid) (~p2_valid) (~p3_valid))
                                  ($reduce & (active_packet == 2) (~p3_valid) (~p4_valid))
                                  ($reduce & (active_packet == 3) (~p4_valid)))
                         )

	select_2 := ($reduce & 
			d0
			p2_valid
			($reduce | 	(active_packet == 0) 
								   (active_packet == 1) 
                                   ($reduce & (~p4_valid) (~p1_valid) (~p3_valid))
                                   ($reduce & (active_packet == 3) (~p4_valid) (~p1_valid))
                                   ($reduce & (active_packet == 4) (~p1_valid)))
                     )

	select_3 := ($reduce & 
			d0
			p3_valid
			($reduce | (active_packet == 0) 
								   (active_packet == 2)
                                   ($reduce & (~p4_valid) (~p2_valid) (~p1_valid))
                                   ($reduce & (active_packet == 4) (~p1_valid) (~p2_valid))
                                   ($reduce & (active_packet == 1) (~p2_valid)))
                        )

	select_4 := ($reduce & 
			d0
			p4_valid
			($reduce | (active_packet == 0) 
			                     (active_packet == 3) 
                                 ($reduce & (~p1_valid) (~p2_valid) (~p3_valid))
                                 ($reduce & (active_packet == 1) (~p2_valid) (~p3_valid))
                                 ($reduce & (active_packet == 2) (~p3_valid)))
                        )

	next_active_packet := ($prioritymux
					select_1 1
					select_2 2
					select_3 3
					select_4 4
					d0 0
                    $default active_packet
				)

	//$rreport ( utils 
	//		   priorityinfo select_1 select_2 select_3 select_4 active_packet down_counter p1_valid p2_valid p3_valid p4_valid )


}

